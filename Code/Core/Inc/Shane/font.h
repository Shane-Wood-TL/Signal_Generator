/*
 * @file font.h
 * @brief This file contains the definition of the font class
 *  Created on: Oct 6, 2024
 *      Author: Shane Wood
 */

#ifndef INC_FONT_H_
#define INC_FONT_H_
#include "allIncludes.h"

/**
 * @class font
 * @brief 12x16 pixel font.
 * 
 * @details Contains the data for all used letters and symbols and has the ability to retrive the pixel data
 */
class font{
private:

	const uint16_t zero[16] = {
	0x03F0, //001111110000,
	0x03F0, //001111110000,
	0x0C0C, //110000001100,
	0x0C0C, //110000001100,
	0x0C3C, //110000111100,
	0x0C3C, //110000111100,
	0x0CCC, //110011001100,
	0x0CCC, //110011001100,
	0x0F0C, //111100001100,
	0x0F0C, //111100001100,
	0x0C0C, //110000001100,
	0x0C0C, //110000001100,
	0x03F0, //001111110000,
	0x03F0, //001111110000,
	0x0000, //000000000000,
	0x0000  //000000000000,
	}; ///< Pixel font data for 0


	const uint16_t one[16] = {
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 1

	const uint16_t two[16] = {
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0030, //000000110000
	0x0030, //000000110000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 2

	const uint16_t three[16] = {
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0030, //000000110000
	0x0030, //000000110000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x0030, //000000110000
	0x0030, //000000110000
	0x000C, //000000001100
	0x000C, //000000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 3

	const uint16_t four[16] = {
	0x0030, //000000110000
	0x0030, //000000110000
	0x00F0, //000011110000
	0x00F0, //000011110000
	0x0330, //001100110000
	0x0330, //001100110000
	0x0C30, //110000110000
	0x0C30, //110000110000
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0030, //000000110000
	0x0030, //000000110000
	0x0030, //000000110000
	0x0030, //000000110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 4

	const uint16_t five[16] = {
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 5

	const uint16_t six[16] = {
	0x00F0, //000011110000
	0x00F0, //000011110000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 6

	const uint16_t seven[16] = {
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0030, //000000110000
	0x0030, //000000110000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 7

	const uint16_t eight[16] = {
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 8

	const uint16_t nine[16] = {
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x03FC, //001111111100
	0x03FC, //001111111100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0030, //000000110000
	0x0030, //000000110000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for 9

	const uint16_t capA[16] = {
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for A

	const uint16_t capF[16] = {
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for F

	const uint16_t capS[16] = {
	0x03FC, //001111111100
	0x03FC, //001111111100
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0000, //000000000000
	0x0000  //000000000000
	}; ///< Pixel font data for S

	const uint16_t lowE[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0FFC, //111111111100
	0x0FFC, //111111111100
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for e

	const uint16_t lowF[16] = {
	0x00F0, //000011110000
	0x00F0, //000011110000
	0x030C, //001100001100
	0x030C, //001100001100
	0x0300, //001100000000
	0x0300, //001100000000
	0x0FC0, //111111000000
	0x0FC0, //111111000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for f

	const uint16_t lowH[16] = {
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0CF0, //110011110000
	0x0CF0, //110011110000
	0x0F0C, //111100001100
	0x0F0C, //111100001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for h

	const uint16_t lowI[16] = {
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x00C0, //000011000000
	0x03F0, //001111110000
	0x03F0, //001111110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for i

	const uint16_t lowM[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0F30, //111100110000
	0x0F30, //111100110000
	0x0CCC, //110011001100
	0x0CCC, //110011001100
	0x0CCC, //110011001100
	0x0CCC, //110011001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for m

	const uint16_t lowP[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0C0C, //110000001100
	0x0C0C, //110000001100
	0x0FF0, //111111110000
	0x0FF0, //111111110000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for p

	const uint16_t lowQ[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x03CC, //001111001100
	0x03CC, //001111001100
	0x0C3C, //110000111100
	0x0C3C, //110000111100
	0x03FC, //001111111100
	0x03FC, //001111111100
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x000C, //000000001100
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for q

	const uint16_t lowR[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0CF0, //110011110000
	0x0CF0, //110011110000
	0x0F0C, //111100001100
	0x0F0C, //111100001100
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0C00, //110000000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for r

	const uint16_t lowT[16] = {
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0FC0, //111111000000
	0x0FC0, //111111000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x0300, //001100000000
	0x030C, //001100001100
	0x030C, //001100001100
	0x00F0, //000011110000
	0x00F0, //000011110000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for t

	const uint16_t Decimal[16] = {
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x0000, //000000000000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x03C0, //001111000000
	0x0000, //000000000000
	0x0000  //000000000000
	};///< Pixel font data for decimal point

	uint32_t squareWaveVis[14] = {
	0xFFC01, //11111111110000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x80401, //10000000010000000001
	0x807FF, //10000000011111111111
	};///< Pixel font data for square wave symbol


	uint32_t pulseWaveVis[14] = {
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0x0600, //00000000011000000000
	0xFFFFF, //11111111111111111111
	};///< Pixel font data for pulse wave symbol

	uint32_t sineWaveVis[14] = {
	0x0000, //00000000000000000000
	0xE000, //00001110000000000000
	0x1F000, //00011111000000000000
	0x31800, //00110001100000000000
	0x31800, //00110001100000000000
	0x60C00, //01100000110000000000
	0x60C01, //01100000110000000001
	0xC0603, //11000000011000000011
	0x80306, //10000000001100000110
	0x0106, //00000000000100000110
	0x018C, //00000000000110001100
	0x00F8, //00000000000011111000
	0x0070, //00000000000001110000
	0x0000, //00000000000000000000
	}; ///< Pixel font data for sine wave symbol

	//starting at all 0's so that if a non-existant char is attempted to be used
	//it will just display a blank
	const uint16_t *fontMap[23] = {nullptr}; ///<Font map for all uses letters and numbers


	/**
		* @brief Populates the fontMap array with values for each
		* letter in the font using the private member variables
		* , where the indexes are defined by the struct letterMappings letterMappings.
	 	*
	 	* This allows for fontMap to be indexed using uint8_t's, but when called by getLetter ASCII values, to acquire
	 	* the font data for a single letter or symbol
	 	*/
	void initializeFontMap();
    /**
    * @brief Populates the font map
    */
public:
	/**
	* @brief The constructor for the font class
	*/
	font();

	/**
	* @brief returns the font data for a single letter
	*
	*
	* @param letter : const uint8_t Is the ASCII value for a letter in the font
	* @return const uint16_t*, A pointer to the data where the font for letter is located
	*/
	const uint16_t* getLetter(const uint8_t letter);

	/**
	* @brief returns the font data needed to draw a sine wave
	*
	* @return const uint32_t*, A pointer to the data where the font for symbol is located
	*/
	const uint32_t* getSineVis();

	/**
	* @brief returns the font data needed to draw a square wave
	*
	* @return const uint32_t*, A pointer to the data where the font for symbol is located
	*/
	const uint32_t* getSquareVis();


	/**
	* @brief returns the font data needed to draw a pulse wave
	*
	* @return const uint32_t*, A pointer to the data where the font for symbol is located
	*/
	const uint32_t* getPulseVis();
};

#endif /* INC_FONT_H_ */
